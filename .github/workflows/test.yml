name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      run: npm run test:ci
      env:
        NODE_ENV: test
        GOOGLE_PLACES_API_KEY: test_key
        GOOGLE_DIRECTIONS_API_KEY: test_key
        GEMINI_API_KEY: test_key
        NEXT_PUBLIC_APP_URL: http://localhost:3000

    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: unit-tests
        fail_ci_if_error: false

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        GOOGLE_PLACES_API_KEY: test_key
        GOOGLE_DIRECTIONS_API_KEY: test_key
        GEMINI_API_KEY: test_key
        NEXT_PUBLIC_APP_URL: http://localhost:3000

    - name: Start application
      run: |
        npm run start &
        sleep 10
      env:
        NODE_ENV: production
        GOOGLE_PLACES_API_KEY: test_key
        GOOGLE_DIRECTIONS_API_KEY: test_key
        GEMINI_API_KEY: test_key
        NEXT_PUBLIC_APP_URL: http://localhost:3000

    - name: Wait for application to be ready
      run: |
        timeout 30 bash -c 'until curl -f http://localhost:3000; do sleep 1; done'

    - name: Run API health checks
      run: |
        echo "Testing API endpoints..."
        curl -f -X GET http://localhost:3000/api/places || exit 1
        curl -f -X GET http://localhost:3000/api/stations || exit 1  
        curl -f -X GET http://localhost:3000/api/mood || exit 1
        echo "All API endpoints are healthy!"