name: PR Checks

on:
  pull_request:
    branches: [main]

jobs:
  # 必須チェック項目を統合
  required-checks:
    name: Required Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Type Check
        run: npm run type-check

      - name: Lint Check
        run: npm run lint

      - name: Security Audit
        run: npm audit --audit-level=moderate

      - name: Run Tests
        run: npm run test:ci
        env:
          NODE_ENV: test
          GOOGLE_PLACES_API_KEY: test_key
          GOOGLE_DIRECTIONS_API_KEY: test_key
          GEMINI_API_KEY: test_key
          NEXT_PUBLIC_APP_URL: http://localhost:3000

      - name: Build Application
        run: npm run build
        env:
          NODE_ENV: production
          GOOGLE_PLACES_API_KEY: test_key
          GOOGLE_DIRECTIONS_API_KEY: test_key
          GEMINI_API_KEY: test_key
          NEXT_PUBLIC_APP_URL: http://localhost:3000

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: pr-checks
          name: pr-coverage
          fail_ci_if_error: false

  # インテグレーションテスト
  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: required-checks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          GOOGLE_PLACES_API_KEY: test_key
          GOOGLE_DIRECTIONS_API_KEY: test_key
          GEMINI_API_KEY: test_key
          NEXT_PUBLIC_APP_URL: http://localhost:3000

      - name: Start application
        run: |
          npm run start &
          sleep 15
        env:
          NODE_ENV: production
          GOOGLE_PLACES_API_KEY: test_key
          GOOGLE_DIRECTIONS_API_KEY: test_key
          GEMINI_API_KEY: test_key
          NEXT_PUBLIC_APP_URL: http://localhost:3000

      - name: Wait for application to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:3000; do sleep 1; done'

      - name: Run API health checks
        run: |
          echo "Testing API endpoints..."
          curl -f -X GET http://localhost:3000/api/places || exit 1
          curl -f -X GET http://localhost:3000/api/stations || exit 1  
          curl -f -X GET http://localhost:3000/api/mood || exit 1
          echo "All API endpoints are healthy!"
